const axios = require("axios");
const fs = require("fs-extra");
const path = require("path");
const FormData = require("form-data");

module.exports.config = {
  name: "rbg",
  version: "1.0.0",
  permission: 0,
  credits: "RAKIB BOSS",
  description: "Remove image background using remove.bg",
  prefix: true,
  category: "edit",
  usages: "[reply image]",
  cooldowns: 5,
  dependencies: {}
};

module.exports.run = async function ({ api, event }) {
  const { threadID, messageID, messageReply } = event;

  if (!messageReply || !messageReply.attachments || messageReply.attachments.length === 0) {
    return api.sendMessage("ЁЯУМ ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржХрзЛржирзЛ ржЫржмрж┐рж░ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐ржи ржПржЗ ржХржорж╛ржирзНржбржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗред", threadID, messageID);
  }

  const attachment = messageReply.attachments[0];
  if (attachment.type !== "photo") {
    return api.sendMessage("тЭМ ржХрзЗржмрж▓ ржЫржмрж┐рж░ ржмрзНржпрж╛ржХржЧрзНрж░рж╛ржЙржирзНржб рж░рж┐ржорзБржн ржХрж░рж╛ ржпрж╛ржмрзЗред", threadID, messageID);
  }

  const imageUrl = attachment.url;
  const inputPath = path.join(__dirname, "cache", "input.png");
  const outputPath = path.join(__dirname, "cache", "output.png");

  try {
    const imgRes = await axios.get(imageUrl, { responseType: "arraybuffer" });
    fs.writeFileSync(inputPath, imgRes.data);

    const formData = new FormData();
    formData.append("image_file", fs.createReadStream(inputPath));
    formData.append("size", "auto");

    const API_KEY = "8363232gMABFwkQdA5HACD9c"; // ЁЯФе Replace this line!

    const response = await axios.post("https://api.remove.bg/v1.0/removebg", formData, {
      responseType: "arraybuffer",
      headers: {
        ...formData.getHeaders(),
        "X-Api-Key": API_KEY
      }
    });

    if (response.status !== 200) {
      return api.sendMessage("тЭМ ржмрзНржпрж╛ржХржЧрзНрж░рж╛ржЙржирзНржб рж░рж┐ржорзБржн ржХрж░рж╛ ржпрж╛ржпрж╝ржирж┐ред API KEY рж╕ржарж┐ржХ ржХрж┐ржирж╛ ржЪрзЗржХ ржХрж░рзБржиред", threadID, messageID);
    }

    fs.writeFileSync(outputPath, response.data);

    api.sendMessage({
      body: "тЬЕ ржмрзНржпрж╛ржХржЧрзНрж░рж╛ржЙржирзНржб рж╕ржлрж▓ржнрж╛ржмрзЗ рж░рж┐ржорзБржн ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!",
      attachment: fs.createReadStream(outputPath)
    }, threadID, () => {
      fs.unlinkSync(inputPath);
      fs.unlinkSync(outputPath);
    });
  } catch (err) {
    console.error(err);
    return api.sendMessage("тЭМ ржХрж┐ржЫрзБ ржнрзБрж▓ рж╣ржпрж╝рзЗржЫрзЗред API Key ржнрзБрж▓ ржмрж╛ ржЫржмрж┐рж░ ржлрж░ржорзНржпрж╛ржЯ рж╕ржарж┐ржХ ржирзЯ рж╣рждрзЗ ржкрж╛рж░рзЗред", threadID, messageID);
  }
};
