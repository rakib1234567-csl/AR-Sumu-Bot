module.exports.config = {
 name: "antiout",
 eventType: ["log:unsubscribe"],
 version: "0.0.1",
 credits: "ùôãùôßùôûùôÆùôñùô£ùô®ùôù ùôçùôñùôüùô•ùô™ùô©",
 description: "Listen events"
};

module.exports.run = async({ event, api, Threads, Users }) => {
 let data = (await Threads.getData(event.threadID)).data || {};
 if (data.antiout == false) return;
 if (event.logMessageData.leftParticipantFbId == api.getCurrentUserID()) return;
 const name = global.data.userName.get(event.logMessageData.leftParticipantFbId) || await Users.getNameUser(event.logMessageData.leftParticipantFbId);
 const type = (event.author == event.logMessageData.leftParticipantFbId) ? "self-separation" : "Koi Ase Pichware Mai Lath Marta Hai?";
 if (type == "self-separation") {
  api.addUserToGroup(event.logMessageData.leftParticipantFbId, event.threadID, (error, info) => {
   if (error) {
    api.sendMessage(`‡¶á‡¶∏ ‡ß®‡ßü ‡¶¨‡¶æ‡¶∞ ‡¶è‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶≤‡¶æ‡¶Æ ‡¶®‡¶æ ü•∫ ${name}-‡¶ï‡ßá ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡•§ :( `, event.threadID)
   } else api.sendMessage(`‡¶¨‡¶æ‡¶ó‡¶ø‡ßü‡¶æ ‡¶ï‡¶á ‡¶ú‡¶æ‡¶á‡¶§‡ßá, ${name} ‡¶ú‡¶æ‡¶®‡ßÅ, ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶ï‡¶ï‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶è‡ßç‡¶Ø‡¶æ‡¶° ‡¶ï‡¶∞‡ßá‡¶¶‡¶ø‡¶≤‡¶æ‡¶Æ:( `, event.threadID);
  })
 }
}
